

<div>
    <h1> {{ collection.title }} </h1>
    {% for product in collection.products %}
        <p>{{ product.title }}</p>

    {% else %}
        <p>No products found in this collection.</p>
    {% endfor %}
</div>
{% comment %} <div class="collection-main">
  <div class="collection-main__header">
    <h1 class="collection-main__title">{{ collection.title }}</h1>
    {% if collection.description != blank %}
        <div class="collection-main__description">{{ collection.description }}</div>
        {% endif %}
    {% if collection.image != blank %}
        <div class="collection-main__image">
            <img src="{{ collection.image | image_url:'large' }}" alt="{{ collection.title }}" width="{{ collection.image.width }}" height="{{ collection.image.height }}">
        </div>
    {% endif %}
    {% render 'collection-product-grid', products: collection.products %}
  </div>
    
    <div class="collection-main__filters">
        {% if collection.all_tags.size > 0 %}
            <div class="collection-main__tags">
                <h2>Filter by Tags</h2>
                <ul class="collection-main__tag-list">
                    {% for tag in collection.all_tags %}
                        <li class="collection-main__tag-item">
                            <a href="{{ collection.url | append: '?constraint=' | append: tag }}" class="collection-main__tag-link">{{ tag }}</a>
                        </li>
                    {% endfor %}
                </ul>
            </div>
        {% endif %} 
        <div class="collection-main__sort">
            <h2>Sort by</h2>
            <select id="sort-by">
                {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
                {% for option in collection.sort_options %}

                    <!-- Removed unused variable assignment -->
                    <option value="{{ collection.url }}">Default</option>
                    <option value="{{ collection.url | append: '?sort=best-selling' }}">Best Selling</option>
                    <option value="{{ collection.url | append: '?sort=title-ascending' }}">Alphabetically, A-Z</option>
                    <option value="{{ collection.url | append: '?sort=title-descending' }}">Alphabetically, Z-A</option>
                    <option value="{{ collection.url | append: '?sort=price-ascending' }}">Price, low to high</option>
                    <option value="{{ collection.url | append: '?sort=price-descending' }}">Price, high to low</option>
                    <option value="{{ collection.url | append: '?sort=created-ascending' }}">Date, old to new</option>
                    <option value="{{ collection.url | append: '?sort=created-descending' }}">Date, new to old</option>


                {% endfor %}

            </select>
        </div>
        <div class="collection-main__view-mode">
            <h2>View</h2>
            <div>
                <button class="collection-main__view-button" data-view="grid">Grid</button>
                <button class="collection-main__view-button" data-view="list">List</button>
            </div>
        </div>
    </div>

  {% if collection.products_count > 0 %}
    <div class="collection-main__pagination">
        {% paginate collection.products by settings.collection_page_size %}
            <div class="pagination">
                {% for products in collection.products %}
                    <div class="product-card">
                        <div class="product-card__image">
                            <img src="{{ product.image | image_url: 'large' }}" alt="{{ product.title }}" width="600" height="400">
                        </div>
                        <div class="product-card__details">
                            <h2 class="product-card__title">{{ product.title }}</h2>
                            <p class="product-card__price">{{ product.price | money }}</p>
                            <button class="product-card__add-to-cart">Add to Cart</button>
                        </div>
                    </div>
                {% endfor %}
            <div class="pagination__controls">
                {% if paginate.previous %}
                    <a href="{{ paginate.previous.url }}" class="pagination__link pagination__link--prev">Previous</a>
                {% endif %}
                {% for part in paginate.parts %}
                    {% if part.is_link %}
                        <a href="{{ part.url }}" class="pagination

        </div>
        {% endpaginate %}
     
    {% endif %}
</div>

{% if settings.show_cart_note %}

    <div class="cart-footer-note">
       <p>Notes are optional, but they can help you keep track of your purchases.</p>
    <textarea class="cart-footer-note__input" placeholder="Add a note..."></textarea>
    <button class="cart-footer-note__button">Add Note</button>
  </div>
{% endif %}
{% schema %}
{
    "name": "Collection Main",
    "settings": [
    {
        "type": "text",
        "id": "background_color",
        "label": "Background Color",
        "default": "#ffffff"
    },
    {
        "type": "text",
        "id": "text_color",
        "label": "Text Color",
        "default": "#000000"
    },
    {
        "type": "text",
        "id": "button_background",
        "label": "Button Background Color",
        "default": "#007bff"
    },
    {
        "type": "text",
        "id": "button_text",
        "label": "Button Text Color",
        "default": "#ffffff"
    },
    {
        "type": "checkbox",
        "id": "show_cart_note",
        "label": "Show Cart Note",
        "default": true
    }

    ],

  "presets": [
    {
        "name": "Default",
        "category": "Collection"
    }
    ]
}
{% endschema %}

<style>
/* Collection Main Styles */

.collection-main {
    background-color: {{ settings.background_color }};
    color: {{ settings.text_color }};
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
    display: flex;
    flex-direction: column;
}
</style>
<script>
    Shopify.queryParams = {};

    // Preserve existing query parameters
    if (location.search.length) {
        var params = location.search.substr(1).split('&');

        for (var i = 0; i < params.length; i++) {
        var keyValue = params[i].split('=');

        if (keyValue.length) {
            Shopify.queryParams[decodeURIComponent(keyValue[0])] = decodeURIComponent(keyValue[1]);
        }
        }
    }

    // Update sort_by query parameter on select change
    document.querySelector('#sort-by').addEventListener('change', function(e) {
        var value = e.target.value;

        Shopify.queryParams.sort_by = value;
        location.search = new URLSearchParams(Shopify.queryParams).toString();
    });
</script> {% endcomment %}